.gameInterface{
    background-image: url("../assets/cloudsBackground.png");
    display: flex;
    perspective: 800px;
    width: 100%;
    height:100%;
    overflow: hidden;
    justify-content: center;
    align-items: center;
    background-size: 100% 100%;

}

.tileContainer{
    display: block;
    position: relative;
    transform-style: preserve-3d;
    width: 800px;
    aspect-ratio: 1;
    transition: width 0.5s ease, transform 0.5s linear;
    transform: rotateX(90deg) scale3d(1,1,1) translate3d(0px,1200px,385px);
    transform-origin: bottom;

}

/*_______________________________________CSS for camera stylization (parent of the tile)_______________________________________*/
.camera{
    display: block; /*hides entire element and children until activated*/
    position: relative;
    transform-style: preserve-3d;
    width: inherit; /*sets initial width, allows for smooth transition*/
    aspect-ratio: 1; /*allows height to be set to width*/
    transition: transform 0.2s linear; /*applies transition effect*/
    /*viewpoint is at center, 90deg rotation with center origin causes board to disappear*/
    /*rotating with origin at bottom visually folds the board backwards*/
    /*background-image: url("../assets/grassTexture.png");*/
    /*animation: flipTile 10s linear infinite;*/
    transform: translate3d(-150px,150px,-20px) rotateZ(45deg);
}

/*_______________________________________CSS for Scene+base stylization_______________________________________*/
.sceneContainer{
    position: absolute;
    transform-style: preserve-3d;
    transition: width 2.5s ease, transform 0.2s linear;
    aspect-ratio: 1;
    width: inherit;
}
.scene{
    /*display: none; !*sets display to none so that the scene does not initially appear, instead wil appear on button click*!*/
    aspect-ratio: 1;
    width: inherit; /*initial width set to 0 so that the transition animates the board coming into existence*/
    background-color: white;
    /*transform-origin: bottom;*/
    transform-style: preserve-3d;
    transition: width 3.5s ease, transform 0.5s linear;
}
.sceneFloor{
    position: absolute;
    aspect-ratio: 1;
    width: inherit;
    background-image: url("../assets/grass.png");
    background-size:100px 100px;
    background-position: center;
    transition: background-image 1s linear;
}
.baseFaces{
    position: absolute;
    width:inherit;
    --baseHeight:40px;
    height:var(--baseHeight);
    background-image: url("../assets/dirt.jpeg");
    background-size:auto;
    background-position: center;
    transition: background-image 1s linear;

}
.baseFaces.baseFront{
    top:100%; /*pushes element to bottom of parent*/
    transform-origin: top; /* performs transformation along top of element*/
    transform: rotateX(-90deg); /* folds element down along x axis*/
}
.baseFaces.baseBack{
    transform-origin: top;
    transform: rotateX(-90deg);
}
.baseFaces.baseLeft{
    transform-origin: top left;
    transform: rotateX(-90deg) rotateY(-90deg);
}
.baseFaces.baseRight{
    transform-origin: top right;
    transform: rotateX(-90deg) rotateY(90deg);
}
.baseFaces.baseFloor{
    height:100%;
    transform: translateZ(calc(-1*(var(--baseHeight))));
}
/*_______________________________________End CSS for Scene+base stylization_______________________________________*/
/*_______________________________________CSS for player handItem_______________________________________*/
.playerContainer{
    /*position: absolute;*/
    /*transform-style: preserve-3d;*/
    /*width: 25px;*/
    /*height:25px;*/

    position: absolute;
    display: block;
    transform-style: preserve-3d;
    transform-origin: bottom; /*transforms occur from bottom up element (allows element to flip up, as opposed to default center origin transform, resulting in element partially being in the ground)*/
    transform:rotateX(-90deg); /*flips player container back up after flip down from board */
    width: 20px;
    height: 20px;
    /*z-index: 1; !*ensures element visually appears on top of scene (when testing where element is with border:)*!*/
    bottom:400px;/*places the character at the bottom of the board initially (closest to the user[player])*/
    left:390px; /*places the left side of the playerContainer element 50% from the left of the parent element (the left side of the board)*/
    transition: transform 0.2s linear;

}
.player{
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    transform-style: preserve-3d;
    width: 20px;
    height: 20px;
    transition: transform 0.2s linear;

}

.handItem{
    position: absolute;
    width: 20px;
    height:20px;
    /*background-image: url("../assets/paladinSword.png");*/
    background-image: var(--selectedHandItem);
    background-size:contain;
    background-position: center;
    background-repeat: no-repeat;
    transform: translate3d(8px,0px,-20px);
    animation: handMovement 2s linear infinite;
}

@keyframes handMovement {
    from{transform: translate3d(8px,0px,-20px)}
    25%{transform: translate3d(10px,2px,-20px)}
    50%{transform: translate3d(12px,0px,-20px)}
    75%{transform: translate3d(10px,2px,-20px)}
    to{transform: translate3d(8px,0px,-20px)}

}