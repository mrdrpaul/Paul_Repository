*{
  padding:0;
  margin: 0;
  border: none;
}


.bodyPage{
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: 2.5fr 95fr 2.5fr ;
  grid-template-rows: auto 1fr auto;
  text-align: center;
  transition: background 5s linear;
}

body header, footer{
  grid-column: 1/span 3;
  height:50px;
  background-color: black;
  color: white;
}

#columnCenterBlock{
  display: grid;
  grid-template-columns: 100fr auto;
  grid-template-rows:  100fr auto;
  overflow: hidden;
  background-image: url("../assets/loginBackground.png");
  background-size: 100vw 100vh;
  background-position: center;
}

#columnLeftBorder,#columnRightBorder{
  background-color: black;
  height: 100%;
}

.loginModal{
  position: absolute;
  display: block;
  z-index: 1;
  width: 300px;
  height:200px;
  box-shadow: 0 0 1000px 100px black;
  align-items: center;
  align-content: center;
  background-color: tan;
  background-image: url("../assets/loginBackground.png");
  background-size: contain;
  background-position: center;

  transform: translate(-50%,-50%);
  left: 50%;
  top: 50%;
}

#loginMusic{
  display: none;
}

.menuInterface{
  background-color: darkgoldenrod;
  background-position: center;
  grid-column: 2;
  grid-row: 1/span 2;
  outline: 5px solid tan;
  outline-offset: -5px;
  transition: width 0.7s ease;
}
.menuInterface.open{
  width: 400px;
}

.menuInterface.closed{
  width: 0;
}

.chatInterface{
  flex-direction: column;
  display: flex;
  position: relative;
  background-color: tan;
  transition: height 0.7s ease;
  text-align: left;
}
.chatMessages{
  flex: 1;
  overflow: auto;
  color: black;
}
.chatBar{
  display: none;
  bottom: 0;
  width:100%;
  height: 20px;
  border-top: 1px solid white;
}

.chatInterface.open{
  height: 250px;
}
.chatInterface.open > .chatBar{
  display: flex;
}
.chatInterface.closed{
  height: 0;
}
.gameInterfaceContainer{
  /*display: block;*/
}
.gameInterface{
  background-image: url("../assets/cloudsBackground.png");
  display: flex;
  perspective: 800px;
  height:100%;
  overflow: hidden;
  justify-content: center;
  align-items: center;
  background-size: 100% 100%;

}

#gameBar{
  position: absolute;
  top: 0;
}

.characterSelectionPage{
  display: grid;
  grid-template-columns: 20fr 60fr 20fr;
  width: 100%;
  height: 100%;
  transition: background-image 2s linear;
  background-image: url("../assets/characterSelectionBackground.png");
  background-size: 100vw 100vh;
  background-position: center;
}


.characterView{
  position: relative;
}
.currentCharacterView{
  position: absolute;
  width: 300px;
  height: 300px;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
  left: 50%;
  bottom: 0;
  transition: background-image 2s linear;
  transform: translate(-50%,-20%);
  animation: rotateCharacter 10s linear infinite;
}

@keyframes rotateCharacter{
  from{transform: translate(-50%,-20%) rotateY(0deg)}
  50%{transform: translate(-50%,-20%) rotateY(360deg)}
  to{transform: translate(-50%,-20%) rotateY(0deg)}

}

.characterStatAdjustment{
  position: relative;
  background-color: slategray;
  text-align: center;
}
.statPointContainer{
  display: flex;
  height:100px;
  width: 100%;

}
.pointContainer{
  width:25%;
  height:50px;
  background-color:purple;
}

.statButton{
  width:25px;
  height:25px;
  padding:0;
  text-align:center
}

.characterLore{
  position: relative;
  display: block;
  width: 250px;
  height:200px;
  left: 50%;
  background-color: cadetblue;
  padding: 4px;
  outline: 4px solid white;
  color:black;
  text-align: center;
  transform: translate(-50%);
}

.characterList{
  overflow: auto;
}

.characterSelectionPanel{
  background-color: slategray;
  position: relative;
  display: block;
  border: 5px solid white;
  opacity: 0.8;
  height: 200px;
  margin: 5px;
}
.nameAndClassRow{
  text-align: start;
  height:50px;
  width: 100%;
  border-bottom: 5px solid white;
}
.panelStatPointContainer{
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto;
}

.health, .mana, .attack, .defense{
  align-items: center;
  display: flex;
}

.healthIcon, .manaIcon, .attackIcon, .defenseIcon{
  width: 50px;
  height:50px;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;

}
.healthIcon{
  background-image: url("../assets/heartIcon.png");

}
.manaIcon{
  background-image: url("../assets/manaIcon.png");
}
.attackIcon{
  background-image: url("../assets/swordIcon.png");
}
.defenseIcon{
  background-image: url("../assets/shieldIcon.png");
}


/*_______________________________________CSS for tile container stylization (parent of the tile elements)_______________________________________*/
.tileContainer{
  display: block;
  position: relative;
  transform-style: preserve-3d;
  width: 800px;
  aspect-ratio: 1;
  transition: width 0.5s ease, transform 0.5s linear;
  transform: rotateX(90deg) scale3d(1,1,1) translate3d(0px,1200px,385px);
  transform-origin: bottom;

}

/*_______________________________________CSS for camera stylization (parent of the tile)_______________________________________*/
.camera{
  display: block; /*hides entire element and children until activated*/
  position: relative;
  transform-style: preserve-3d;
  width: inherit; /*sets initial width, allows for smooth transition*/
  aspect-ratio: 1; /*allows height to be set to width*/
  transition: transform 0.2s linear; /*applies transition effect*/
  /*viewpoint is at center, 90deg rotation with center origin causes board to disappear*/
  /*rotating with origin at bottom visually folds the board backwards*/
  /*background-image: url("../assets/grassTexture.png");*/
  /*animation: flipTile 10s linear infinite;*/
}

/*_______________________________________CSS for Scene+base stylization_______________________________________*/
.sceneContainer{
  position: absolute;
  transform-style: preserve-3d;
  transition: width 2.5s ease, transform 0.2s linear;
  aspect-ratio: 1;
  width: inherit;
}
.scene{
  /*display: none; !*sets display to none so that the scene does not initially appear, instead wil appear on button click*!*/
  aspect-ratio: 1;
  width: inherit; /*initial width set to 0 so that the transition animates the board coming into existence*/
  background-color: white;
  /*transform-origin: bottom;*/
  transform-style: preserve-3d;
  transition: width 3.5s ease, transform 0.5s linear;
}
.sceneFloor{
  position: absolute;
  aspect-ratio: 1;
  width: inherit;
  background-image: url("../assets/grass.png");
  background-size:100px 100px;
  background-position: center;
  transition: background-image 1s linear;
}
.baseFaces{
  position: absolute;
  width:inherit;
  --baseHeight:40px;
  height:var(--baseHeight);
  background-image: url("../assets/dirt.jpeg");
  background-size:auto;
  background-position: center;
  transition: background-image 1s linear;

}
.baseFaces.baseFront{
  top:100%; /*pushes element to bottom of parent*/
  transform-origin: top; /* performs transformation along top of element*/
  transform: rotateX(-90deg); /* folds element down along x axis*/
}
.baseFaces.baseBack{
  transform-origin: top;
  transform: rotateX(-90deg);
}
.baseFaces.baseLeft{
  transform-origin: top left;
  transform: rotateX(-90deg) rotateY(-90deg);
}
.baseFaces.baseRight{
  transform-origin: top right;
  transform: rotateX(-90deg) rotateY(90deg);
}
.baseFaces.baseFloor{
  height:100%;
  transform: translateZ(calc(-1*(var(--baseHeight))));
}
/*_______________________________________End CSS for Scene+base stylization_______________________________________*/
/*_______________________________________CSS for player handItem_______________________________________*/
.playerContainer{
  /*position: absolute;*/
  /*transform-style: preserve-3d;*/
  /*width: 25px;*/
  /*height:25px;*/

  position: absolute;
  display: block;
  transform-style: preserve-3d;
  transform-origin: bottom; /*transforms occur from bottom up element (allows element to flip up, as opposed to default center origin transform, resulting in element partially being in the ground)*/
  transform:rotateX(-90deg); /*flips player container back up after flip down from board */
  width: 20px;
  height: 20px;
  /*z-index: 1; !*ensures element visually appears on top of scene (when testing where element is with border:)*!*/
  bottom:400px;/*places the character at the bottom of the board initially (closest to the user[player])*/
  left:390px; /*places the left side of the playerContainer element 50% from the left of the parent element (the left side of the board)*/
  transition: transform 0.2s linear;

}
.player{
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  transform-style: preserve-3d;
  width: 20px;
  height: 20px;
  transition: transform 0.2s linear;

}

.handItem{
  position: absolute;
  width: 20px;
  height:20px;
  /*background-image: url("../assets/paladinSword.png");*/
  background-image: var(--selectedHandItem);
  background-size:contain;
  background-position: center;
  background-repeat: no-repeat;
  transform: translate3d(8px,0px,-20px);
  animation: handMovement 2s linear infinite;
}

@keyframes handMovement {
  from{transform: translate3d(8px,0px,-20px)}
  25%{transform: translate3d(10px,2px,-20px)}
  50%{transform: translate3d(12px,0px,-20px)}
  75%{transform: translate3d(10px,2px,-20px)}
  to{transform: translate3d(8px,0px,-20px)}

}


/*_______________________________________End CSS for player handItem_______________________________________*/
