*{
    padding:0;
    margin: 0;
    border: none;
}

body{
    width: 100vw;
    height: 100vh;
    background-image: linear-gradient(45deg,black,teal,aqua,black,aquamarine);
    background-size: 100vw 100vh ;
    background-repeat: round;
    display: grid;
    grid-template-columns: 5fr 90fr 5fr ;
    grid-template-rows: auto 1fr auto;
    text-align: center;
}
body header, footer{
    grid-column: 1/span 3;
    height:75px;
    background-color: black;
    color: white;
    opacity:0.7;
}
#columnLeftBorder,#columnRightBorder{
    position: relative;
    background-color: black;
    height: 100%;
    opacity:0.7;
    transition: opacity 0.3s ease;
}

/*_______________________________________Buttons_______________________________________*/
#firstTime, #previousUser, #begin{
    position: absolute;
    top: 200px;
    border-radius: 100%;

    width: 100px;
    height: 100px;
    background-color: red;
    transition: opacity 1s linear;
}
#firstTime{
    right:53%;
    /*transform: rotateX(-45deg);*/
    /*transform: translate3d(100px,100px,100px);*/
}
#previousUser{
    left:53%;
}
#begin{
    top:350px;
    color: grey;
    background-image: url("./assets/stars.png");
}
/*_______________________________________End Buttons_______________________________________*/

/*_______________________________________CSS for menu on scene customization_______________________________________*/

.menuContainer{
    position: absolute;
    overflow: hidden;
    background-color: green;
    width: 0;
    height:100%;
    transition: width 0.2s ease;
}
.menu{
    height: 100%;
    display: grid;
    grid-template-rows: auto auto auto auto auto;
}
#sceneName > textarea{
    width: 100%;
    height: 100%;
}

@keyframes populateMenu{
    from{}
    to{right:0;}
}
/*_______________________________________End CSS for menu on scene customization_______________________________________*/

#columnCenterBlock {
    display: grid;
    height: 100%;
    grid-template-columns: 10fr 80fr 10fr;
    overflow: hidden;
    background-image: url("./assets/background.png");
    background-size:cover;
    background-position: center;
    transition: background-image 1s linear;
}
#centerBlockCenterCol{
    display: flex;
    perspective: 800px;
    height:100%;
    overflow: hidden;
    justify-content: center;
    align-items: center;

}

/*_______________________________________CSS for tile container stylization (parent of the tile elements)_______________________________________*/
.tileContainer{
    display: none; /*hides entire element and children until activated*/
    position: relative;
    transform-style: preserve-3d;
    outline: 5px solid white; /*for visual testing*/
    outline-offset: -5px; /*for visual testing*/
    width: 0; /*sets initial width, allows for smooth transition*/
    aspect-ratio: 1; /*allows height to be set to width*/
    transition: width 0.5s ease, transform 2s linear; /*applies transition effect*/
    /*viewpoint is at center, 90deg rotation with center origin causes board to disappear*/
    /*rotating with origin at bottom visually folds the board backwards*/
    /*transform-origin: center;*/
    transform-origin: bottom;
}
/*_______________________________________CSS for camera stylization (parent of the tile)_______________________________________*/
.camera{
    position: relative;
    transform-style: preserve-3d;
    transition: width 1.5s ease;
    aspect-ratio: 1;
    width: inherit;
    outline: 5px solid yellow;
    outline-offset: -5px;

    }
@keyframes rotateCamera {
    from{}
    to{transform:rotateZ(360deg)}
}
/*_______________________________________CSS for Scene+base stylization_______________________________________*/
.sceneContainer{
    position: absolute;
    transform-style: preserve-3d;
    transition: width 2.5s ease;
    aspect-ratio: 1;
    width: inherit;
    outline: 5px solid red;
    outline-offset: -5px;

}
.scene{
    /*display: none; !*sets display to none so that the scene does not initially appear, instead wil appear on button click*!*/
    aspect-ratio: 1;
    width: inherit; /*initial width set to 0 so that the transition animates the board coming into existence*/
    background-color: white;
    /*transform-origin: bottom;*/
    transform-style: preserve-3d;
    transition: width 3.5s ease, transform 0.5s linear;
}
.sceneFloor{
    position: absolute;
    aspect-ratio: 1;
    width: inherit;
    background-image: url("./assets/grass.png");
    background-size:auto;
    background-position: center;
    transition: background-image 1s linear;
}
.baseFaces{
    position: absolute;
    width:inherit;
    --baseHeight:40px;
    height:var(--baseHeight);
    background-image: url("./assets/dirt.jpeg");
    background-size:auto;
    background-position: center;
    transition: background-image 1s linear;

}
.baseFaces.baseFront{
    top:100%; /*pushes element to bottom of parent*/
    transform-origin: top; /* performs transformation along top of element*/
    transform: rotateX(-90deg); /* folds element down along x axis*/
}
.baseFaces.baseBack{
    transform-origin: top;
    transform: rotateX(-90deg);
}
.baseFaces.baseLeft{
    transform-origin: top left;
    transform: rotateX(-90deg) rotateY(-90deg);
}
.baseFaces.baseRight{
    transform-origin: top right;
    transform: rotateX(-90deg) rotateY(90deg);
}
.baseFaces.baseFloor{
    height:100%;
    transform: translateZ(calc(-1*(var(--baseHeight))));
}
/*_______________________________________End CSS for Scene+base stylization_______________________________________*/
/*_______________________________________Player customization_______________________________________*/
.playerContainer{
    position: absolute;
    transform-style: preserve-3d;
    transform-origin: bottom; /*transforms occur from bottom up element (allows element to flip up, as opposed to default center origin transform, resulting in element partially being in the ground)*/
    transform:rotateX(-90deg); /*flips player container back up after flip down from board */
    width: 20px;
    height: 20px;
    /*z-index: 1; !*ensures element visually appears on top of scene (when testing where element is with border:)*!*/
    bottom:0;/*places the character at the bottom of the board initially (closest to the user[player])*/
    left:50%; /*places the left side of the playerContainer element 50% from the left of the parent element (the left side of the board)*/
    transition: transform 0.5s linear;
}
.player{
    background-image: url("./assets/pixelWizard.png");
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    width: 20px;
    height: 20px;
}
/*_______________________________________End Player customization_______________________________________*/
/*_______________________________________Boss customization_______________________________________*/
.bossContainer{
    position: absolute;
    transform-style: preserve-3d;
    transition: width 2.5s ease;
    aspect-ratio: 1;
    width: inherit;
    outline: 5px solid green;
    outline-offset: -5px;
}
.skeletonBossContainer{
    display: flex;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 50%;
    outline: 5px solid white;
    outline-offset: -5px;
    width: 100px;
    height:200px;
    transform-origin: top;
    transform-style: preserve-3d;
    /*translate of (-50%,0,200px) along with the left 50% moves element to center and rotate(-90deg) flips element down*/
    /*preserves top/bottom for child elements*/
    transform:translate3d(-50%,50%,200px) rotateX(-90deg);
    /*animation: rotateBossContainer 10s linear infinite;*/
    z-index: 1;
}
@keyframes rotateBossContainer {
    from{transform: translate3d(-50%,-50%,200px) rotateX(-90deg)}
    to{transform:translate3d(-50%,-50%,200px) rotateX(-90deg) rotateY(360deg)}

}
.bossHead{
    position: absolute;
    top: -100px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    width:100px;
    aspect-ratio: 1;
}
.bossBody{
    display: flex;
    position: absolute;
    top: 0;
    background-color: transparent;
    outline: 5px solid white;
    outline-offset: -5px;
    width:100px;
    height:200px;
    justify-content: center;
    transform-style: preserve-3d;
}
.spineLower{
    position: absolute;
    bottom:0;
    background-color: black;
    outline: 5px solid black;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;

    width: 25px;
    height:70px;
    transform-origin: bottom;
    transform: rotateX(25deg);
}
.spineMid{
    position: absolute;
    bottom:65px;
    background-color: black;
    outline: 5px solid black;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;
    width: 25px;
    height:90px;
    transform-origin: bottom;
    transform: translateZ(-30px);
}
.spineUpper{
    position: absolute;
    bottom:145px;
    background-color: black;
    outline: 5px solid black;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;
    width: 25px;
    height:90px;
    transform-origin: bottom;
    transform-style: preserve-3d;
    transform: rotateX(-25deg) translateZ(-30px);
}

.collarBone{
    position:relative;
    display: flex;
    width:25px;
    height:25px;
    background-color: green;
    transform-style: preserve-3d;
}
.collarBoneBackLeft{
    position: absolute;
    left:100%;
    width: 100px;
    height: 25px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;

    transform-origin: left;
    transform: rotateY(-20deg);
}
.collarBoneBackRight{
    position: absolute;
    right:100%;
    width: 100px;
    height: 25px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;

    transform-origin: right;
    transform: rotateY(20deg);
}
.collarBoneFrontLeft{
    position: absolute;
    left:100%;
    width: 100px;
    height: 25px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;

    transform-origin: right;
    transform: translateZ(34px) rotateY(20deg);
}
.collarBoneFrontRight{
    position: absolute;
    right:100%;
    width: 100px;
    height: 25px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    box-shadow: 0 0 10px 3px white;

    transform-origin: left;
    transform: translateZ(34px) rotateY(-20deg);
}

.leftArm{
    position: absolute;
    top: 0;
    right: -50px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    width:50px;
    height: 100px;

}
.rightArm{
    position: absolute;
    top: 0;
    left:-50px;
    background-color: black;
    outline: 5px solid white;
    outline-offset: -5px;
    width:50px;
    height: 100px;
}

.summonPortalContainer{
    position: absolute;
    bottom:-74px;
    display: flex;
    width: 150px;
    aspect-ratio: 1;
    /*background-color: white;*/
    justify-content: center;
    align-items: center;
    transform-style: preserve-3d;
    transform: rotateX(90deg);

}
.summonPortal{
    position: relative;
    /*circle rotates at middle, bottom pushes circle down by half of diameter (= to radius) so that the circle sits at bottom of skeletonBossContainer*/
    top: 0;
    background-color: black;
    box-shadow: 0 0 10px 3px white;
    border-radius: 50%;
    /*width: 150px;*/
    width: 0;
    aspect-ratio: 1;
    transform-origin: center;
    transition: width 5s linear;
    animation: bossPortal 6s linear;
    animation-fill-mode: forwards;
    z-index: 1;

}

@keyframes bossPortal{
    from{width:0}
    /*80%{width:0;transform:rotateX(90deg)}*/
    80%{width:150px}
    to{width:150px}
}

.portalAttack{
    position: absolute;
    background-color: black;
    box-shadow: 0 0 10px 3px white;
    border-radius: 50%;
    left: 50%;
    top:50%;
    width: 0;
    aspect-ratio: 1;
    transition: width 5s linear;
    /*animation: bossPortal 5s linear infinite;*/
    z-index: 1;
}
